<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:property-placeholder location="classpath:config.properties"/>

    <!--    文件上传    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10240000000"/>
        <property name="maxInMemorySize" value="1024000000"/>
    </bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${db_driver}"/>
        <property name="jdbcUrl" value="${db_url}"/>
        <property name="username" value="${db_username}"/>
        <property name="password" value="${db_password}"/>
        <property name="connectionTestQuery" value="SELECT 1"/>
    </bean>

    <!-- SqlSessionFactory Config -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="plugins">
            <array>
                <ref bean="mybatisPlusInterceptor"/>
            </array>
        </property>
        <property name="globalConfig" ref="globalConfig"/>

    </bean>

    <bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">
        <property name="metaObjectHandler" ref="myMetaObjectHandler"/>
    </bean>

    <bean id="myMetaObjectHandler" class="com.yongoe.ecy.config.mybatisplus.MyMetaObjectHandler"/>

    <!--        插件    -->
    <bean id="mybatisPlusInterceptor" class="com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor">
        <property name="interceptors">
            <list>
                <ref bean="paginationInnerInterceptor"/>
            </list>
        </property>
    </bean>
    <!--    分页插件    -->
    <bean id="paginationInnerInterceptor"
          class="com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor">
        <constructor-arg name="dbType" value="MYSQL"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yongoe.ecy.*.mapper"/>
    </bean>

    <!-- 配置事务管理 -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 事务管理 属性 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--     只读的get事务，嫌麻烦       -->
            <!--  <tx:method name="get*" propagation="REQUIRED" read-only="true"/>-->
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置 controller 添加事务 -->
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.yongoe.ecy..controller.*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>
    </aop:config>


    <!--    redis-->
    <!-- redis连接池 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="10"/>
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="2"/>
        <!--        <property name="maxWait" value="15000"/>-->
        <!--        <property name="minEvictableIdleTime" value="300000"/>-->
        <!--        <property name="numTestsPerEvictionRun" value="3"/>-->
        <!--        <property name="timeBetweenEvictionRuns" value="60000"/>-->
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
    </bean>
    <!-- redis连接工厂 -->
    <bean id="redisStandaloneConfiguration"
          class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <property name="hostName" value="${redis_host}"/>
        <property name="port" value="${redis_port}"/>
        <!--        <property name="password" ref="redisPassword"/>-->
        <property name="database" value="1"/>
    </bean>
    <bean id="redisPassword" class="org.springframework.data.redis.connection.RedisPassword">
        <constructor-arg name="thePassword" value="${redis_password}"/>
    </bean>
    <!--jedis连接池-->
    <bean id="mutableJedisClientConfiguration"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory$MutableJedisClientConfiguration">
        <property name="poolConfig" ref="jedisPool"/>
    </bean>

    <!--jedisConnectionFactory jedis工厂-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="standaloneConfig" ref="redisStandaloneConfiguration"/>
        <constructor-arg name="clientConfig" ref="mutableJedisClientConfiguration"/>
    </bean>

    <!--redisTemplate-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="enableTransactionSupport" value="true"/>
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <!--序列化-->
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="jackson2JsonRedisSerializer"/>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        <property name="hashValueSerializer" ref="jackson2JsonRedisSerializer"/>
    </bean>

    <!--序列化相关bean-->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="jdkSerializationRedisSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    <bean id="jackson2JsonRedisSerializer"
          class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer">
        <constructor-arg name="mapper" ref="objectMapper"/>
    </bean>
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

</beans>
